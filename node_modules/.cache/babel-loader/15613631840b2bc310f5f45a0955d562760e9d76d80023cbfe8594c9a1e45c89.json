{"ast":null,"code":"var _jsxFileName = \"/Users/edwinchalmers/turing_work/3mod/dungeongpt/client/src/Components/ChatBox/ChatBox.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { EnterButton, StyledChatBox } from \"./ChatBox.styled\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBox({\n  onNewMessage\n}) {\n  _s();\n  const [text, setText] = useState('');\n  const autoGrowTextArea = event => {\n    setText(event.target.value);\n    event.target.style.height = 'auto';\n    event.target.style.height = `${event.target.scrollHeight}px`;\n  };\n  const sendMessage = async () => {\n    if (text.trim()) {\n      const payload = {\n        messages: [{\n          role: \"user\",\n          content: text\n        }]\n      };\n      try {\n        const response = await axios.post('/api/chat', payload);\n        onNewMessage(response.data.choices[0].message.content); // Send response to ChatLog component\n        setText(''); // Clear the text area\n      } catch (error) {\n        console.error('Failed to send message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledChatBox, {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      onInput: autoGrowTextArea,\n      value: text,\n      maxLength: \"988\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(EnterButton, {\n      onClick: sendMessage,\n      disabled: !text.trim(),\n      children: `>>`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["useState","EnterButton","StyledChatBox","axios","jsxDEV","_jsxDEV","ChatBox","onNewMessage","_s","text","setText","autoGrowTextArea","event","target","value","style","height","scrollHeight","sendMessage","trim","payload","messages","role","content","response","post","data","choices","message","error","console","children","onInput","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/edwinchalmers/turing_work/3mod/dungeongpt/client/src/Components/ChatBox/ChatBox.js"],"sourcesContent":["import { useState } from \"react\"\nimport { EnterButton, StyledChatBox } from \"./ChatBox.styled\"\nimport axios from 'axios';\n\n\nexport default function ChatBox({ onNewMessage }) {\n  const [text, setText] = useState('')\n\n  const autoGrowTextArea = (event) => {\n    setText(event.target.value)\n    event.target.style.height = 'auto'\n    event.target.style.height = `${event.target.scrollHeight}px`\n  }  \n\n  const sendMessage = async () => {\n    if (text.trim()) {\n      const payload = {\n        messages: [{ role: \"user\", content: text }]\n      };\n      try {\n        const response = await axios.post('/api/chat', payload);\n        onNewMessage(response.data.choices[0].message.content); // Send response to ChatLog component\n        setText(''); // Clear the text area\n      } catch (error) {\n        console.error('Failed to send message:', error);\n      }\n    }\n  };\n\n  return (\n    <StyledChatBox>\n      <textarea onInput={autoGrowTextArea} value={text} maxLength=\"988\"></textarea> {/* Add onInput event handler */}\n      <EnterButton onClick={sendMessage} disabled={!text.trim()}>{`>>`}</EnterButton>\n    </StyledChatBox>\n  )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,aAAa,QAAQ,kBAAkB;AAC7D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BF,KAAK,CAACC,MAAM,CAACE,KAAK,CAACC,MAAM,GAAG,MAAM;IAClCJ,KAAK,CAACC,MAAM,CAACE,KAAK,CAACC,MAAM,GAAI,GAAEJ,KAAK,CAACC,MAAM,CAACI,YAAa,IAAG;EAC9D,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIT,IAAI,CAACU,IAAI,CAAC,CAAC,EAAE;MACf,MAAMC,OAAO,GAAG;QACdC,QAAQ,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAEd;QAAK,CAAC;MAC5C,CAAC;MACD,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,WAAW,EAAEL,OAAO,CAAC;QACvDb,YAAY,CAACiB,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACL,OAAO,CAAC,CAAC,CAAC;QACxDb,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EAED,oBACExB,OAAA,CAACH,aAAa;IAAA6B,QAAA,gBACZ1B,OAAA;MAAU2B,OAAO,EAAErB,gBAAiB;MAACG,KAAK,EAAEL,IAAK;MAACwB,SAAS,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,KAAC,eAC9EhC,OAAA,CAACJ,WAAW;MAACqC,OAAO,EAAEpB,WAAY;MAACqB,QAAQ,EAAE,CAAC9B,IAAI,CAACU,IAAI,CAAC,CAAE;MAAAY,QAAA,EAAG;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEpB;AAAC7B,EAAA,CA9BuBF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}